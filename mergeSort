import time


def mergesort(arr):
    if len(arr) <= 1:
        return arr

    mid = len(arr) // 2
    left_half = arr[:mid]
    right_half = arr[mid:]

    left_half = mergesort(left_half)
    right_half = mergesort(right_half)

    return merge(left_half, right_half)


def merge(left, right):
    merged = []
    left_index, right_index = 0, 0

    while left_index < len(left) and right_index < len(right):
        if left[left_index] < right[right_index]:
            merged.append(left[left_index])
            left_index += 1
        else:
            merged.append(right[right_index])
            right_index += 1

    while left_index < len(left):
        merged.append(left[left_index])
        left_index += 1

    while right_index < len(right):
        merged.append(right[right_index])
        right_index += 1

    return merged

with open("numbers.txt", "r") as file:
    numbers = [int(line.strip()) for line in file]

start_time = time.time()
sorted_numbers = mergesort(numbers)
end_time = time.time()
execution_time = end_time - start_time

print("Sorted numbers:")
for num in sorted_numbers:
    print(num)

print("Execution time:", execution_time, "seconds")
